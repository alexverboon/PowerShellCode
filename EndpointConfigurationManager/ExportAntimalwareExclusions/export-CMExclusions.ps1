function Export-CMExclusions
{
<#
.Synopsis
   Export-CMExclusions
.DESCRIPTION
   Export-CMExclusions extracts defender exclusoins from exported defender antimalware policy file
.EXAMPLE
   Export-CMExclusions -CMPolicyFile C:\temp\defenderexclusion\DefenderforMikronClientsEPLAN.xml
.NOTES
    v1.0, 20.05.2022, Alex Verboon
#>
    [CmdletBinding()]
    [Alias()]
    [OutputType([int])]
    Param
    (
        # CM Policy File
        [Parameter(Mandatory=$true)]
        $CMPolicyFile
    )

    Begin
    {
    }
    Process
    {

    $PathData = [System.Collections.Generic.List[Object]]::new()
    $ExtensionData = [System.Collections.Generic.List[Object]]::new()
    $ProcessData = [System.Collections.Generic.List[Object]]::new()

    [xml]$CMPolicyDefinition = Get-Content -Path $CMPolicyFile
    $CMPolicy = [System.IO.Path]::GetFileNameWithoutExtension("$CMPolicyFile")


    $ExclusionPaths = $CMPolicyDefinition.SecurityPolicy.PolicySection.LocalGroupPolicySettings.AddKey | Select-Object Name, Disabled, AddValue | Where-Object { $_.Name -like "SOFTWARE\Policies\Microsoft\Microsoft Antimalware\Exclusions\Paths" } | Select-Object -ExpandProperty AddValue
    If ($null -eq $ExclusionPaths) {
        $ExclusionPaths = @()
    }

    $ExclusionExtensions = $CMPolicyDefinition.SecurityPolicy.PolicySection.LocalGroupPolicySettings.AddKey | Select-Object Name, Disabled, AddValue | Where-Object { $_.Name -like "SOFTWARE\Policies\Microsoft\Microsoft Antimalware\Exclusions\Extensions" } | Select-Object -ExpandProperty AddValue
    If ($null -eq $ExclusionExtensions) {
        $ExclusionExtensions = @()
    }

    $ExclusionProcesses = $CMPolicyDefinition.SecurityPolicy.PolicySection.LocalGroupPolicySettings.AddKey | Select-Object Name, Disabled, AddValue | Where-Object { $_.Name -like "SOFTWARE\Policies\Microsoft\Microsoft Antimalware\Exclusions\Processes" } | Select-Object -ExpandProperty AddValue
    If ($null -eq $ExclusionProcesses) {
        $ExclusionProcesses = @()
    }

    
        ForEach($pathentry in $ExclusionPaths)
        {
                        $pathresult = [PSCustomObject]@{
                            ExclusionType    = "Path"
                            Value            = $pathentry.Name
                            Policy           = $CMPolicy
                            File   = "$CMPolicyFile"

                        }
                        [void]$PathData.Add($pathresult)
        }

        ForEach($extensionentry in $ExclusionExtensions)
        {
                        $extresult = [PSCustomObject]@{
                            ExclusionType    = "Extension"
                            Value            = $extensionentry.Name
                            Policy           = $CMPolicy
                            File   = "$CMPolicyFile"

                        }
                        [void]$ExtensionData.Add($extresult)
        }


        ForEach($processentry in $ExclusionProcesses)
        {
                        $processresult = [PSCustomObject]@{
                            ExclusionType    = "Process"
                            Value            = $processentry.Name
                            Policy           = $CMPolicy
                            File   = "$CMPolicyFile"
                        }
                        [void]$ProcessData.Add($processresult)
        }
        $output = $PathData + $ExtensionData + $ProcessData
        $output
    }
    End
    {
    }
}